@model Project.Models.DataMapper.Users

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="box box-warning">
    <div class="box-header with-border">
        <h3 class="box-title">Sản Phẩm</h3>
    </div>
    <div class="box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Người Dùng</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GroupId, "GroupId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control upload_file", @placeholder = "Chọn Ảnh....." } })
                        @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            <label class="radio-inline"><input type="radio" name="Gender" checked value="True">Nam</label>
                            <label class="radio-inline"><input type="radio" name="Gender" value="false">Nữ</label>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <label class="radio-inline"><input type="radio" name="Status" checked value="1">Hiện</label>
                        <label class="radio-inline"><input type="radio" name="Status" value="0">Ẩn</label>
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
           
        }
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @section scripts{
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Areas/Admin/Assets/ckfinder/ckfinder.js"></script>
        <script>
            $(".upload_file").click(function () {
                var finder = new CKFinder();
                var input = $(this);
                // xử lý sk khi chọn ảnh
                finder.selectActionFunction = function (url, file, files) {
                    // url: đường dẫn file cuối cùng được chọn
                    // file: là đối tượng file cuối cùng được chọn
                    // files: danh sách các đối tượng file được chọn

                    // Kiểm tra input đó up 1 hay nhiều ảnh
                    if (input.data("multiple") == true) {
                        var urls = "";

                        $.each(files, function () {

                            urls += $(this)[0].url + ";";

                            input.after("<img src='" + $(this)[0].url + "' width='100' />");
                        })
                        urls = urls.slice(0, urls.length - 1)

                        input.val(urls);
                    } else {
                        input.val(url);
                        input.after("<img src='" + url + "' width='100' />");
                    }
                }

                finder.popup();
            })
        </script>
    }
